defaults: &defaults
  working_directory: /webrtc-streamer
  docker:
    - image: cimg/base:2022.04
      user: root
    
version: 2.1

jobs:
  # -------------------------------------
  # dowload common tools 
  # -------------------------------------
  setup:
    <<: *defaults
    
    resource_class: large
    environment:
      WEBRTCROOT: /webrtc 

    steps:     
      - run: apt-get update; DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates wget python3 autoconf automake libtool git make g++ xz-utils
      - run: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /depot_tools
      - run: echo 'export PATH=/depot_tools:$PATH' >> $BASH_ENV
      - run: mkdir ${WEBRTCROOT} && cd ${WEBRTCROOT} && fetch --no-history --nohooks webrtc 
      - run: cd ${WEBRTCROOT} && sed -i -e "s|'src/resources'],|'src/resources'],'condition':'rtc_include_tests==true',|" src/DEPS 

      - persist_to_workspace:
          root: /
          paths:
            - depot_tools 
            - webrtc
            
  # -------------------------------------
  # build x86_64
  # -------------------------------------
  build_x86_64:
    <<: *defaults
    
    parameters:
      buildtype:
        type: string    
    
    environment:
      TAR_OPTIONS: --no-same-owner
      WEBRTCROOT: /webrtc 

    steps:
      - attach_workspace:
          at: /          
      - checkout
      - run: apt-get update; DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates wget python3 python3-pkg-resources autoconf automake libtool git cmake make g++ xz-utils libgtk-3-dev libxtst-dev libasound2-dev libpulse-dev
      - run: echo 'export PATH=/depot_tools:$PATH' >> $BASH_ENV
      - run: cd ${WEBRTCROOT} && gclient sync 
      
      - run: cmake -DCMAKE_BUILD_TYPE=<< parameters.buildtype >> . && make && cpack 

      - run: mkdir /distrib && cp webrtc-streamer*.tar.gz /distrib
      - persist_to_workspace:
          root: /
          paths:
            - distrib 
            
  # -------------------------------------
  # build for RPI2
  # -------------------------------------
  build_rpi_armv7:
    <<: *defaults

    parameters:
      buildtype:
        type: string    
    
    environment:
      TAR_OPTIONS: --no-same-owner
      WEBRTCROOT: /webrtc 
      CROSSCOMPILER: https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%2010.2.0/Raspberry%20Pi%202%2C%203/cross-gcc-10.2.0-pi_2-3.tar.gz

    steps:
      - attach_workspace:
          at: /
      - checkout
      - run:
          command: | 
            apt-get update; DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates wget python3 python3-pkg-resources autoconf automake libtool git make cmake g++ xz-utils pkg-config
            wget -qO- ${CROSSCOMPILER} | tar xz -C /opt 
            export PATH=$(ls -d /opt/cross-pi-gcc-*/bin):/depot_tools:$PATH
            ${WEBRTCROOT}/src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm
            pushd ${WEBRTCROOT} && gclient sync && popd 
            cmake -DCMAKE_BUILD_TYPE=<< parameters.buildtype >> -DCMAKE_SYSTEM_PROCESSOR=armv7l -DCMAKE_LIBRARY_ARCHITECTURE=arm-linux-gnueabihf -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY . && make 
            cpack
          no_output_timeout: 1h

      - run: mkdir /distrib && cp webrtc-streamer*.tar.gz /distrib
      - persist_to_workspace:
          root: /
          paths:
            - distrib 

  # -------------------------------------
  # build for RPI1/B
  # -------------------------------------
  build_rpi_armv6:
    <<: *defaults
    
    parameters:
      buildtype:
        type: string    
    
    environment:
      TAR_OPTIONS: --no-same-owner
      WEBRTCROOT: /webrtc 
      CROSSCOMPILER: https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%2010.2.0/Raspberry%20Pi%201%2C%20Zero/cross-gcc-10.2.0-pi_0-1.tar.gz

    steps:
      - attach_workspace:
          at: /
      - checkout
      - run: 
          command: |
            apt-get update; DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates wget python3 python3-pkg-resources autoconf automake libtool git cmake make g++ xz-utils pkg-config
            wget -qO- ${CROSSCOMPILER} | tar xz -C /opt 
            export PATH=$(ls -d /opt/cross-pi-gcc-*/bin):/depot_tools:$PATH
            ${WEBRTCROOT}/src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm
            pushd ${WEBRTCROOT} && gclient sync && popd 
            cmake -DCMAKE_BUILD_TYPE=<< parameters.buildtype >> -DCMAKE_SYSTEM_PROCESSOR=armv6l -DCMAKE_LIBRARY_ARCHITECTURE=arm-linux-gnueabihf -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY . && make 
            cpack

          no_output_timeout: 1h

      - run: mkdir /distrib && cp webrtc-streamer*.tar.gz /distrib
      - persist_to_workspace:
          root: /
          paths:
            - distrib 

  # -------------------------------------
  # build for arm64
  # -------------------------------------
  build_arm64:
    <<: *defaults
    
    parameters:
      buildtype:
        type: string    
    
    environment:
      TAR_OPTIONS: --no-same-owner
      WEBRTCROOT: /webrtc 

    steps:
      - attach_workspace:
          at: /
      - checkout
      - run: 
          command: |
            apt-get update; DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates wget python3 python3-pkg-resources autoconf automake libtool git cmake make g++ xz-utils pkg-config gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
            export PATH=/depot_tools:$PATH
            ${WEBRTCROOT}/src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm64
            pushd ${WEBRTCROOT} && gclient sync && popd 
            cmake -DCMAKE_BUILD_TYPE=<< parameters.buildtype >> -DCMAKE_SYSTEM_PROCESSOR=arm64 -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY -DWEBRTCDESKTOPCAPTURE=OFF . && make 
            cpack
          no_output_timeout: 1h

      - run: mkdir /distrib && cp webrtc-streamer*.tar.gz /distrib
      - persist_to_workspace:
          root: /
          paths:
            - distrib

  # -------------------------------------
  # store artifact in circleci
  # -------------------------------------
  store_artifact:
    <<: *defaults
    
    steps:
      - attach_workspace:
          at: /
      - store_artifacts:
          path: /distrib
          
  
workflows:
  version: 2
  build:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/            
      - build_x86_64:
          requires:
            - setup
          matrix:
            parameters:
              buildtype: ["Release", "Debug"]            
          filters:
            tags:
              only: /.*/            
      - build_rpi_armv7:
          requires:
            - setup
          matrix:
            parameters:
              buildtype: ["Release", "Debug"]            
          filters:
            tags:
              only: /.*/            
      - build_rpi_armv6:
          requires:
            - setup
          matrix:
            parameters:
              buildtype: ["Release", "Debug"]            
          filters:
            tags:
              only: /.*/     
      - build_arm64:
          requires:
            - setup
          matrix:
            parameters:
              buildtype: ["Release", "Debug"]            
          filters:
            tags:
              only: /.*/                          
      - store_artifact:
          requires:
            - build_x86_64
            - build_rpi_armv7
            - build_rpi_armv6
            - build_arm64
          filters:
            tags:
              only: /.*/            
 
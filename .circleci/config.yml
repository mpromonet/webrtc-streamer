version: 2

experimental:
  notify:
    branches:
      only:
        - master

jobs:
  publish:
    working_directory: ~/webrtc-streamer
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - attach_workspace:
        at: /tmp
      - add_ssh_keys:
          fingerprints:
            - "82:1a:c2:3d:75:83:2e:63:6a:c7:16:08:87:a9:c6:d5"
            - "89:55:e3:61:6c:80:2e:9e:be:1c:01:ba:57:1a:89:2b"
      - checkout
      - run: sudo cp .circleci/ssh_config /etc/ssh/ssh_config
      - run: sudo apt-get install -fy pssh
      - run:
          name: Publish Docker Container
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export DOCKER_REPO="rfzia/webrtc-proxy:production"
            else
              export DOCKER_REPO="rfzia/webrtc-proxy:staging"
            fi
            docker load -i /tmp/container.tar
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKER_REPO
      - run:
          name: Reset Hosts
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              .circleci/deploy.sh production
            else
              .circleci/deploy.sh staging
            fi 
  build:
    working_directory: ~/webrtc-streamer
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker pull rfzia/webrtc-proxy:staging
      - run:
          name: Publish Docker Container
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export DOCKER_REPO="rfzia/webrtc-proxy:production"
            else
              export DOCKER_REPO="rfzia/webrtc-proxy:staging"
            fi
            docker build -t $DOCKER_REPO -f Dockerfile-build .
            docker save $DOCKER_REPO > /tmp/container.tar
      - persist_to_workspace:
          root: /tmp
          paths:
            - container.tar
workflows:
  version: 2
  build:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                develop
                master

version: 2
jobs:
  build_x86_64:
    working_directory: ~/webrtc-streamer
    docker:
      - image: heroku/heroku:16
    environment:
      GNARGSCOMMON: 'rtc_include_tests=false rtc_enable_protobuf=false use_custom_libcxx=false use_ozone=true rtc_include_pulse_audio=false rtc_build_examples=false'
      GYP_GENERATOR_OUTPUT: "x86_64"
      GNARGS: 'is_debug=false rtc_use_h264=true ffmpeg_branding="Chrome"'
      TAR_OPTIONS: --no-same-owner
      WEBRTCROOT: /webrtc
      SYSROOT: /webrtc/src/build/linux/debian_sid_amd64-sysroot

    steps:
      - checkout

      - run: apt-get update; apt-get install -y --no-install-recommends autoconf automake libtool git make g++ xz-utils
      - run: git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git /depot_tools
      - run: echo 'export PATH=/depot_tools:$PATH' >> $BASH_ENV
      - run: mkdir ${WEBRTCROOT} && cd ${WEBRTCROOT} && fetch --no-history --nohooks webrtc
      - run: cd ${WEBRTCROOT} && sed -i -e "s|'src/resources'],|'src/resources'],'condition':'rtc_include_tests==true',|" src/DEPS
      - run: cd ${WEBRTCROOT} && gclient sync
      - run: make live555 alsa-lib
      - run: cd ${WEBRTCROOT}/src && gn gen ${GYP_GENERATOR_OUTPUT}/out/Release --args="${GNARGSCOMMON} ${GNARGS}" && ninja -C ${GYP_GENERATOR_OUTPUT}/out/Release jsoncpp rtc_json webrtc
      - run: make all tgz

      # archive artifacts
      - run: mkdir /distrib && cp *.tgz /distrib
      - persist_to_workspace:
          root: /
          paths:
            - distrib

  store_artifact:
    working_directory: ~/webrtc-streamer
    docker:
      - image: heroku/heroku:16
    steps:
      - attach_workspace:
          at: /
      - store_artifacts:
          path: /distrib

workflows:
  version: 2
  build:
    jobs:
      - build_x86_64:
          filters:
            tags:
              only: /.*/
